# Simple workflow for running puppeteer tests on pull requests
name: Puppeteer Tests

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  cleanup:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:
      - name: Cleanup screenshot branch
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = `screenshots-pr-${context.issue.number}`;
            try {
              await github.rest.git.deleteRef({
                owner: targetOwner,
                repo: targetRepo,
                ref: `heads/${branchName}`
              });
              console.log(`Deleted screenshot branch: ${branchName}`);
            } catch (error) {
              console.log(`Screenshot branch ${branchName} not found or already deleted: ${error.message}`);
            }

  test:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Configure Git Safe Directory
        run: |
          git config --global --add safe.directory /github/workspace
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Install Puppeteer Chromium
        run: npx puppeteer install
      - name: build
        run: npm run build
      - name: Start server
        run: npm start &
      - name: Wait for server
        run: |
          echo "Waiting for server to start..."
          timeout 30 bash -c 'until curl -s http://localhost:4444 > /dev/null; do sleep 1; done'
      - name: Run Tests
        run: npm test
      - name: Upload screenshots as artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: puppeteer-screenshots
          path: Puppet/images/*.png
      - name: Create screenshot comparison comment
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const handleScreenshots = require('./screenshot-handler');
            await handleScreenshots({ github, context });
